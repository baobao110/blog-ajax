/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.22.v20171030
 * Generated at: 2017-12-18 06:58:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pag;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class usercenter_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("file:/C:/Users/Administrator/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1513508906190L));
    _jspx_dependants.put("jar:file:/C:/Users/Administrator/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425949870000L));
    _jspx_dependants.put("jar:file:/C:/Users/Administrator/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/head.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<h1>个人中心页面</h1>\r\n");
      out.write("<img src=\"/user/showPicture.do\" width=\"66px\" height=\"66px\" onerror=\"javascript:this.src='/images/dayuan.jpg';\" ><br>\r\n");
      out.write("<a href=\"/user/toUpload.do\">上传头像</a>\r\n");
      out.write("<h1>用户:");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\r\n");
      out.write("<a href=\"/blog/toOpenAccount.do\" target=\"_blank\">开户</a><br>\r\n");
      out.write("<a href=\"/user/back.do\" target=\"_blank\">退出</a><br>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>卡号</td>\r\n");
      out.write("\t\t<td>时间</td>\r\n");
      out.write("\t\t<td>手续</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("<table id=\"blog\">\r\n");
      out.write("\t\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<button onclick=\"first()\">首页</button>\r\n");
      out.write("\t\t<button onclick=\"pre()\">上一页</button>\r\n");
      out.write("\t\t<button onclick=\"next()\">下一页</button>\r\n");
      out.write("\t\t<button onclick=\"last()\">尾页</button>\r\n");
      out.write("\t\t<span id=\"pag\">1/0</span>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/foot.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/js/json2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tvar currentPage = 1;\r\n");
      out.write("\r\n");
      out.write("\tvar totalPage = 0;\r\n");
      out.write("\tfunction next() {\r\n");
      out.write("\t\tif (currentPage == totalPage) {\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcurrentPage = parseInt(currentPage) + 1;\r\n");
      out.write("\t\tflow();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction pre() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif (currentPage == 1) {\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tcurrentPage = parseInt(currentPage) - 1;\r\n");
      out.write("\t\tflow();\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction first() {\r\n");
      out.write("\t\tcurrentPage = 1;\r\n");
      out.write("\t\tflow();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction last() {\r\n");
      out.write("\t\tcurrentPage = totalPage;\r\n");
      out.write("\t\tflow();\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t function flow(){\r\n");
      out.write("\t\tvar param = {\r\n");
      out.write("\t\t\t\tcurrentPage:currentPage\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t\r\n");
      out.write("\t$.post('/user/ToFlow.do',param, callback);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction callback(data, status) {\r\n");
      out.write("\t\talert('点击');\r\n");
      out.write("\t\t//alert(ajaxDAO);\r\n");
      out.write("\t\tvar ajaxDAO = JSON.parse(data);\r\n");
      out.write("\t\t//var ajaxDAO=data;\r\n");
      out.write("\t\t//alert(ajaxDAO);\r\n");
      out.write("\t\talert(ajaxDAO.success);\r\n");
      out.write("\t\talert(\">>>\"+ajaxDAO.data);\r\n");
      out.write("\t\tvar result=ajaxDAO.data.object;\r\n");
      out.write("\t\t//var result=data.data.obj;\r\n");
      out.write("\t\talert(result);\r\n");
      out.write("\t\tvar msg='<tr><td>卡号</td><td>时间</td><td>手续</td></tr>';\r\n");
      out.write("\t\tfor (var i=0; i<result.length;i++) {\r\n");
      out.write("\t\t\tmsg+='<tr>';\r\n");
      out.write("\t\t\tmsg+='<td>'+result[i].number+'</td>';\r\n");
      out.write("\t\t\tmsg+='<td>'+result[i].createtime+'</td>';\r\n");
      out.write("\t\t\tmsg+='<td>';\r\n");
      out.write("\t\t\tmsg+='<a href=\"/blog/toWrite.do?number='+result[i].number+'\" target=\"_blank\">写博客</a>';\r\n");
      out.write("\t\t\tmsg+='<a href=\"/blog/toList.do?number='+result[i].number+'\" target=\"_blank\">进入</a>';\r\n");
      out.write("\t\t\tmsg+='<a href=\"/blog/toChangePassword.do?number='+result[i].number+'\" target=\"_blank\">修改密码</a>';\r\n");
      out.write("\t\t\tmsg+='<a href=\"/blog/toDelete.do?number='+result[i].number+'\" target=\"_blank\">销户</a>';\r\n");
      out.write("\t\t\tmsg+='</td></tr>';\r\n");
      out.write("\t\t\ttotalPage = ajaxDAO.data.totalPage;\r\n");
      out.write("\t\t\tcurrentPage=ajaxDAO.data.currentPage;\r\n");
      out.write("\t\t\t$('#blog').html(msg);\r\n");
      out.write("\t\t\t$('#pag').html(currentPage+ '/' + totalPage);\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\talert(msg);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t} \r\n");
      out.write("\r\n");
      out.write("\tflow();\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
